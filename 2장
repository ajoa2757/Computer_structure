# Computer_structure
2021 1학기 컴퓨터구조론 내용정리

2장에서는 주로 ISA(instruction set architecture) 를 배운다.

구조는 처음 만들떄 잘 만들어야 하며, 한번 만들어지면 오래 사용하게 된다.

ISA 는 한 마이크로프로세서의 시장성을 결정하는 중요한 문제이다,

================
Fetch, Decode, Execution 이 세가지 과정을 계속해서 반복하게 된다.


프로세스의 메모리에는 여러 프로그램이 데이터와 같이 저장이 되어 있다.
ㄴ>이것은 저장되어 있는 데이터와 구분이 힘들다.

따라서, 데이터와 마찬가지로 어떤 프로그램이 들어가느냐에 따라서 컴퓨터의 성능이 달라진다.

이것이 Stored-Program Concept 다. 

================
바이너리 언어로 메모리에 instruction 이 저장이 되어 있다.

이것이 명령인지 데이터인지 알 수 가 없다는 뜻이다.

CPU 가 프로그램 카운터의 내용을 메모리에 보내서 읽어오는 그놈은 명령어로 쓰겠노라고 결정하는 것.


1. CPU 가 특정 주소의 내용을 읽을 때 명령어로 쓴다. 
2. 명령어로 작업을 수행하면서 메모리에 엑세스 할 때는 데이터로 쓴다.

================
산술연산의 표현 - PostFIx

ABC+* 

1. ABC 가 순서대로 스택에 push 된다
2. + 연산자가 push 되면, pop 을 2회 하여 BC 를 add 한다.
3. * 연산자가 push 되면, 앞서 add 된 레지스터의 숫자와 그 아래에 있는 A 를 계산한다.

=================
RISC(reduced instruction set computer)

명령 하나하나가 수행되는 시간이 작고 일정하다 라는 뜻.

파이프라인 하나로 마이크로 CPU 를 제작할 수 있다 ? 
ㄴ>트럭이랑 승용차를 부품 하나하나로 나누어서 제작하면, 같은 공장 라인에서 만들 수 있다.

===================

레지스터 32개가 있다. 0번은 0으로 고정되어 있다. 

산술적 유닛이 읽어올 수 있는 영역이 한정되어 있다.

이때, 서로 다른 유닛이 읽어와야 하는 영역끼리 연산을 해야 하는 경우는 불가능하다.

이 때는 다른 영역으로 데이터가 옮겨간다.

메인 메모리가 있는데, 바이트(4비트)마다 주소가 존재한다.

이것을 alignment restriction 이라고 한다.

================
